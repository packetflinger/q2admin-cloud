// compile with:
// protoc --go_out=. --go_opt=paths=source_relative rule.proto
syntax="proto3";

option go_package = "github.com/packetflinger/q2admind/proto";

package proto;

enum RuleType {
    MUTE = 0;     // can't talk
    BAN = 1;      // can't connect
    MESSAGE = 2;  // triggered message to user
    STIFLE = 3;   // they can talk, but only once per amount of time
}

// A single key-value pair from a player's client.
message UserInfo {
    string property = 1;
    string value = 2;
}

// If an exception matches as part of a rule that matches, the rule will
// be considered to have not matched.
//
// Instead of including password as an exception method, use the user_info. Players
// would need to include any passwords in their userinfo string anyway to get them 
// to the server, so just look for a "password" or "pw" keyed ui value instead.
message Exception {
    repeated string description = 7; // why? who is this exception for?
    repeated string address = 1;     // IP addr/cidr
    repeated string hostname = 6;    // PTR record (case-insensitive regex)
    repeated string name = 2;        // player name (case-insensitive regex)
    repeated string client = 3;      // game client name/version (case-sensitive regex)
    repeated UserInfo user_info = 4; // UI key/value pair
    int64 expiration_time = 5;       // unix timestamp when exception no long valid
}

// An player ACL. When a player connects to a cloudadmin-enabled gameserver, the
// server will attempt to match the player's information to each rule one at a time.
message Rule {
    string uuid = 1;
    RuleType type = 2;
    repeated string address = 3;       // IP addr/cidr
    repeated string hostname = 18;     // PTR record (case-INsensitive regex)
    repeated string name = 4;          // player name (case-INsensitive regex)
    repeated string client = 5;        // game client/version (regex)
    repeated UserInfo user_info = 6;   // UI key/value pair (case-sensitive regex)
    repeated string message = 7;       // text to send on type MESSAGE or ban/mute message
    bool vpn = 19;                     // player IP is a VPN
    int64 creation_time = 8;           // unix timestamp when rule was created
    int64 expiration_time = 9;         // unix timestamp when no longer applies
    uint32 delay = 11;                 // wait this man millisecs before action
    int32 stifle_length = 20;          // seconds 
    repeated string description = 14;  // details on why this rule was created
    repeated Exception exception = 17; // prevent a rule match 
}

// A collection of rules
message Rules {
    repeated Rule rule = 1;
}
