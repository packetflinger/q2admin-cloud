// compile with:
// protoc --go_out=. --go_opt=paths=source_relative rule.proto
syntax="proto3";

option go_package = "github.com/packetflinger/q2admind/proto";

package proto;

enum RuleType {
    MUTE = 0;     // can't talk
    BAN = 1;      // can't connect
    MESSAGE = 2;  // triggered message to user
    STIFLE = 3;   // they can talk, but only once per amount of time
}

// A single key-value pair from a player's client.
message UserInfo {
    string property = 1;
    string value = 2;
}

// For crafting rules based around specific times/timing.
//
// If a TimeSpec message is included in a rule, that rule only applies when
// the TimeSpec is true. The opposite is true if a TimeSpec is used in an
// exception.
// 
// Times are relative to "midnight" [00:00] in the timezone the cloudadmin
// server is running, unless a timezone is included in the DATETIME_SPEC. So
// an "after 8am" equivelent rule on an America/Eastern [GMT-5] based admin 
// server applied to a gameserver in the America/Pacific [GMT-8] zone will
// effectively result in a "after 5am" local rule.
//
// Daylight savings is not taken into account at all, that's up to the host
// machine.
//
// Don't use bad dates like February 29th when not in a leap year, bad shit 
// will probably happen.
//
// DATETIME_SPEC examples
//   A string representation of a date/time. Only a few formats are accepted:
//     - "16:30:00" (hour:minute:second)
//     - "4:30PM"
//     - "2024-10-05" (year-month-day)
//     - "2024-10-05 16:30:00" (year-month-day hour:minute:second)
//
// INTERVAL_SPEC 
//   It's a string representation of an amount of time. If no units are
//   included, the value will be assumed as seconds. Recognized units:
//     - "s" seconds
//     - "m" minutes
//     - "h" hours
//     - "d" days
//     - "w" weeks
//     - "M" months (note capital)
//     - "y" years
//   Examples
//     ["5m", "300s", "300", "0.083h", "5:00", "00:05:00"] = 5 minutes
//     ["3600", "3600s", "1h", "1:00:00", "01:00:00", "0.083d"] = 1 hour
//     ["21d", "3w", "0.057y", "0.7M"] = 3 weeks
//
// Before and after will be processeed when a player connects. After, every
// and play_time will also be checked during maintenance intervals, which runs
// on a schedule, so it's less granular. An "after 10:02AM" rule will match the
// next time maintenance runs, which is most likely every 5 minutes, so it rule
// won't be applied until 10:05. 
message TimeSpec {
    string before = 1;      // DATETIME_SPEC
    string after = 2;       // DATETIME_SPEC
    string every = 3;       // INTERVAL_SPEC
    string play_time = 4;   // INTERVAL_SPEC
}

// If an exception matches as part of a rule that matches, the rule will
// be considered to have not matched.
//
// Instead of including password as an exception method, use the user_info. Players
// would need to include any passwords in their userinfo string anyway to get them 
// to the server, so just look for a "password" or "pw" keyed ui value instead.
message Exception {
    repeated string description = 7; // why? who is this exception for?
    repeated string address = 1;     // IP addr/cidr
    repeated string hostname = 6;    // PTR record (case-insensitive regex)
    repeated string name = 2;        // player name (case-insensitive regex)
    repeated string client = 3;      // game client name/version (case-sensitive regex)
    repeated UserInfo user_info = 4; // UI key/value pair
    int64 expiration_time = 5;       // unix timestamp when exception no long valid
    TimeSpec timespec = 8;           // time-related stuff
}

// An player ACL. When a player connects to a cloudadmin-enabled gameserver, the
// server will attempt to match the player's information to each rule one at a time.
message Rule {
    string uuid = 1;
    RuleType type = 2;
    repeated string address = 3;       // IP addr/cidr
    repeated string hostname = 18;     // PTR record (case-INsensitive regex)
    repeated string name = 4;          // player name (case-INsensitive regex)
    repeated string client = 5;        // game client/version (regex)
    repeated UserInfo user_info = 6;   // UI key/value pair (case-sensitive regex)
    repeated string message = 7;       // text to send on type MESSAGE or ban/mute message
    bool vpn = 19;                     // player IP is a VPN
    int64 creation_time = 8;           // unix timestamp when rule was created
    int64 expiration_time = 9;         // unix timestamp when no longer applies
    uint32 delay = 11;                 // wait this man millisecs before action
    int32 stifle_length = 20;          // seconds 
    repeated string description = 14;  // details on why this rule was created
    repeated Exception exception = 17; // prevent a rule match
    TimeSpec timespec = 21;            // time-related stuff
    bool disabled = 22;                // ignore this rule?
}

// A collection of rules
message Rules {
    repeated Rule rule = 1;
}
